server {
  listen 80;
  listen [::]:80;
  server_name ezycourse.com www.ezycourse.com;

  if ($host ~ ^[^.]+\.ezycourse\.com$) {
    return 301 https://$host$request_uri;
  }

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl; # managed by Certbot
  server_name ezycourse.com www.ezycourse.com;
  ssl_certificate /home/ubuntu/ssl/cert.pem; # managed by Certbot
  ssl_certificate_key /home/ubuntu/ssl/cert.key; # managed by Certbot

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://localhost:8080/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Accept-Encoding "";
    proxy_set_header Proxy "";
    proxy_cache_bypass $http_upgrade;
  }

  location /api/ {
    rewrite ^/api/(.*) /$1 break;
    proxy_pass http://localhost:3333/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Accept-Encoding "";
    proxy_set_header Proxy "";
    proxy_cache_bypass $http_upgrade;
  }

  if ($host = www.ezycourse.com) {
    return 301 https://ezycourse.com$request_uri;
    } # managed by Certbot

  }

  # catch all subdomain
  server {
    listen 443 ssl; # managed by Certbot
    server_name *.ezycourse.com;
    ssl_certificate /home/ubuntu/ssl/cert.pem; # managed by Certbot
    ssl_certificate_key /home/ubuntu/ssl/cert.key; # managed by Certbot

    location / {
      #root /var/www/web-maintaince;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://localhost:3000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Accept-Encoding "";
      proxy_set_header Proxy "";
      proxy_cache_bypass $http_upgrade;
    }

    location /api/ {
      rewrite ^/api/(.*) /$1 break;
      proxy_pass http://localhost:3333/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Accept-Encoding "";
      proxy_set_header Proxy "";
      proxy_cache_bypass $http_upgrade;
    }

    location /connect/ {
      rewrite ^/connect/(.*) /$1 break;
      proxy_pass http://localhost:3300/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Accept-Encoding "";
      proxy_set_header Proxy "";
      proxy_cache_bypass $http_upgrade;
    }

  }

  server {
    listen 443 ssl; # managed by Certbot
    server_name _;
    ssl_certificate /home/ubuntu/ssl/cert.pem; # managed by Certbot
    ssl_certificate_key /home/ubuntu/ssl/cert.key; # managed by Certbot

    location / {
      #root /var/www/web-maintaince;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://localhost:3000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Accept-Encoding "";
      proxy_set_header Proxy "";
      proxy_cache_bypass $http_upgrade;
    }

    location /api/ {
      rewrite ^/api/(.*) /$1 break;
      proxy_pass http://localhost:3333/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Accept-Encoding "";
      proxy_set_header Proxy "";
      proxy_cache_bypass $http_upgrade;
    }
    location /connect/ {
      rewrite ^/connect/(.*) /$1 break;
      proxy_pass http://localhost:3300/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Accept-Encoding "";
      proxy_set_header Proxy "";
      proxy_cache_bypass $http_upgrade;
    }

  }
